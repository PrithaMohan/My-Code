/********************************************************************
Split Array & Sort 
An array of size N is passed as the input. Then an integer value denoting the position P is also passed as the input.
The program must split the array into two sub-arrays. 
- First sub-array from 1 to P 
- Second sub-array from P+1 to N
Both the sub-arrays must be sorted individually and the sorted arrays must be printed as the output.
Boundary Condition(s):
2 <= N <= 10^5 1 <= P < N 
Input Format:
The first line contains N and P separated by a space.
The second line contains N integer values separated by a space.
Output Format:
The first line contains P integer values separated by a space.
The second line contains N-P integer values separated by a space. 
Example Input/Output 1:
Input:
5 3
30 90 10 5 2
Output:
10 30 90
2 5
Explanation:
Here P=3. So the first three values are 30 90 10. So the first line contains them in sorted order.
The second sub-array contains 5 2. So the second line contains 2 5 (in sorted order).
Example Input/Output 2:
Input:
5 2 
30 90 10 55 2
Output:
30 90 
2 10 55

********************************************************************/

#include<stdio.h>
#include <stdlib.h>

int main()
{int n,p;
scanf("%d%d",&n,&p);
int a[n];
for(int i=0;i<n;i++)
{
    scanf("%d",&a[i]);
}
for(int i=0;i<p-1;i++)
{
    for(int j=i+1;j<p;j++)
    {
        
        if(a[i]>a[j])
        {int t;
            t=a[i];
            a[i]=a[j];
            a[j]=t;
        }
    }
}
for(int i=p;i<n-1;i++)
{
    for(int j=i+1;j<n;j++)
    {
        if(a[i]>a[j])
        {
            int t;
            t=a[i];
            a[i]=a[j];
            a[j]=t;
        }
    }
}
for(int i=0;i<p;i++)
printf("%d ",a[i]);
printf("\n");
for(int i=p;i<n;i++)
printf("%d ",a[i]);

}
