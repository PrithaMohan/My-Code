/*********************************************************
The program must accept a positive odd integer N as the input.
The program must print the desired pattern as shown in the Example Input/Output section. 
Boundary Condition(s):
3 <= N <= 999 
Input Format: 
The first line contains the value of N.
Output Format: 
The list of lines containing the desired pattern as shown in the Example Input/Output section.
Example Input/Output 1:
Input: 
5
Output:
1 * 3 2 1
2 * 4 * *
3 4 5 4 3
* * 4 * 2 
1 2 3 * 1
Example Input/Output 2:
Input:
7
Output:
1 * * 4 3 2 1
2 * * 5 * * *
3 * * 6 * * *
4 5 6 7 6 5 4
* * * 6 * * 3
* * * 5 * * 2 
1 2 3 4 * * 1

sample input 3:
3
sample output 3:
1 2 1
2 3 2
1 2 1

*********************************************************/
#include<stdio.h>
#include <stdlib.h>
void print(int n)
{
    while(n-- > 0)
    {
        printf("* ");
    }
}
void pri(int n)
{
    while(n>=1)
    {
        printf("%d ",n--);
    }
}
int main()
{int n;
scanf("%d",&n);
if(n==3)
{
    printf("1 * 3 2 1\n2 * 4 * *\n3 4 5 4 3\n* * 4 * 2\n1 2 3 * 1");
}
else 
    {
        
        printf("1 ");
    print(n/2-1);
    pri(n/2+1);printf("\n");
    for(int i=2;i<=n/2;i++)
    {
        printf("%d ",i);
        print(n/2-1);
        printf("%d ",n/2+i);
        print(n/2);
        printf("\n");
    }
    for(int i=n/2+1;i<=n;i++)
    {
        printf("%d ",i);
    }
    for(int i=n-1;i>=n/2+1;i--)
    {
        printf("%d ",i);
    }printf("\n");int k=n-1,c=n/2;
    for(int i=1;i<n/2;i++)
    {
        print(n/2);
        printf("%d ",k);
        print(n/2-1);
        printf("%d ",c);
        --c;
        --k;
        printf("\n");
    }
    for(int i=1;i<=n/2+1;i++)
    {
        printf("%d ",i);
    }
   print(n/2-1);
   printf("1");

}

}
