/*****************************************************************************************************************
Sand Clock Pattern
The program must accept an integer N as the input.
The program must print the desired pattern as shown in the Example Input/Output section.
Boundary Condition(s):
1 <= N <= 100
Input Format:
The first line contains the value of N.
Output Format: 
The lines containing the desired pattern as shown in the Example Input/Output section.
Example Input/Output 1:
Input:
3
Output:
3*3*3*3*3*3
--2*2*2*2
----1*1
-----* 
----1*1
--2*2*2*2
3*3*3*3*3*3
Example Input/Output 2:
Input:
4
Output:
4*4*4*4*4*4*4*4 
--3*3*3*3*3*3
----2*2*2*2
------1*1 
-------* 
------1*1
----2*2*2*2
--3*3*3*3*3*3
4*4*4*4*4*4*4*4

*****************************************************************************************************************/

#include<stdio.h>
#include <stdlib.h>

int main()
{
int N,space = 0;
scanf("%d",&N);
for(int i = N; i>=1;i--)
{
    for(int j = 1; j <= space;j++)
    printf("-");
    for(int j = 1; j<=i;j++)
    printf("%d*",i);
    for(int j = 1;j<=i;j++)
    if(j!=i)
    printf("%d*",i);
    else
    printf("%d",i);
    printf("\n");
    space+=2;
}
--space;
for(int i = 0; i<space;i++)
printf("-");
printf("*\n");
--space;
for(int i = 1; i<=N; i++)
{
    for(int j = 0;j<space;j++)
    printf("-");
    for(int j = 1; j<= i;j++)
    printf("%d*",i);
    for(int j = 1; j<=i;j++)
    {
        if(j!=i)
        printf("%d*",i);
        else
        printf("%d",i);
    }
    printf("\n");
    space-=2;
}

}
