/*******************************************************************************************************
Hex to RGB
The program must accept a 24-bit color code in hexadecimal representation as the input.
The program must convert the color code to (R,G,B) representation and print it in the format as shown in the Example Input/Output section.
Boundary Condition(s):
000000 <= Hexadecimal color code <= FFFFFF 
Input Format:
The first line contains # followed by 6 hexadecimal digits.
Output Format: 
The first line contains the (R,G,B) representation as shown in the Example Input/Output section.
Example Input/Output 1:
Input:
#001AFF
Output:
(0,26,255) 
Explanation:
The first two digit value is 00 which is converted to decimal as 0.
Hence 0 is printed for the color R. The second two digit value is 1A which is converted to decimal as 26.
Hence 26 is printed for the color G. The third two digit value is FF which is converted to decimal 255.
Hence 255 is printed for the color B.
Example Input/Output 2:
Input:
#C0FFEE
Output:
(192,255,238)
*******************************************************************************************************/
#include<stdio.h>
#include <stdlib.h>
int get_value(char ch)
{
    if(ch >= 'A' && ch <= 'Z')
    {
        switch(ch)
        {
            case 'A':return 10;
            case 'B':return 11;
            case 'C':return 12;
            case 'D':return 13;
            case 'E':return 14;
            case 'F':return 15;
        }
    }return ch-'0';
}
int main()
{
char str[7];
scanf("%s",str);
int x = get_value(str[1])*16 + get_value(str[2]);
int y = get_value(str[3])*16 + get_value(str[4]);
int z = get_value(str[5])*16 + get_value(str[6]);
printf("(%d,%d,%d)",x,y,z);
}
