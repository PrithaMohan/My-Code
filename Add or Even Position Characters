/**********************************************************************************************************
Odd or Even Position Characters 
The program must accept a string value S as the input. 
The program must print the characters which are present at the odd positions if the count of vowels in S is odd.
Else the program must print the characters which are present at the even positions as the output.
If there is no vowel in the string S then the program must print -1 as the output.
Boundary Condition(s):
2 <= Length of S <= 100 
Input Format:
The first line contains the string S. 
Output Format:
The first line contains either the characters which are present at the odd or even positions or -1.
Example Input/Output 1:
Input: 
apple
Output:
pl
Explanation:
In the word apple, there are two vowels.
Here the count 2 is even. Hence the characters at the even positions are printed. 
Hence the output is pl 
Example Input/Output 2:
Input:
rhythm 
Output:
-1
**********************************************************************************************************/

#include<stdio.h>
#include <stdlib.h>
int vowel_count(char *str)
{
    int ind = 0,count = 0;
    while(str[ind] != '\0')
    {
        switch(str[ind])
        {
            case 'a':
            case 'A':
            case 'e':
            case 'E':
            case 'i':
            case 'I':
            case 'o':
            case 'O':
            case 'u':
            case 'U':++count;
        }
        ++ind;
    }
    return count;
}
int main()
{
    int ind = 0,index = 0;
    char str[100];
    scanf("%s",str);
    int length = strlen(str);
    int count = vowel_count(str);
    if(count > 0)
    {if(count%2 == 0)
        ++ind;
        while(ind < length)
        {
         str[index++] = str[ind];
            ind += 2;
        }str[index] = '\0';
        printf("%s",str);
    }
    else printf("-1");
}
